{"ast":null,"code":"var _jsxFileName = \"/home/koala/itis-course-2020-2021-fe-master/src/components/pages/TasksWithGraphql/TasksWithGraphql.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ToDoList from '../../molecules/ToDoList';\nimport ToDoForm from '../../molecules/ToDoForm';\nimport Button from \"../../atoms/Button\";\nimport useTask from \"../../../hooks/useTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultChangeValue = false;\nlet defaultList = [{\n  text: 'do h/w',\n  id: 1\n}, {\n  text: 'sleeeeeep',\n  id: 2\n}];\n/*const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n`;*/\n\nconst ToDoPage = () => {\n  _s();\n\n  const {\n    tasks,\n    loading\n  } = useTask();\n  const [list, setList] = useState(defaultList);\n  const [hasChanged, changed] = useState(defaultChangeValue);\n\n  const onAddNewListItem = value => {\n    setList([...list, {\n      text: value\n    }]);\n  };\n\n  useEffect(() => {\n    if (JSON.stringify(list) === JSON.stringify(defaultList)) {\n      changed(false);\n    } else {\n      changed(true);\n    }\n  });\n\n  const resetList = () => {\n    setList(defaultList);\n  };\n\n  const onSaveList = () => {\n    defaultList = list;\n    changed(false);\n  };\n\n  const onRemove = i => {\n    setList(list.filter((elem, index) => i !== index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      list: list,\n      onRemove: onRemove,\n      hasChanged: hasChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      onSubmit: onAddNewListItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: resetList,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onSaveList,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDoPage, \"5MYdJKEn9iwiGWwp6sjfVAXIr78=\", false, function () {\n  return [useTask];\n});\n\n_c = ToDoPage;\nexport default ToDoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoPage\");","map":{"version":3,"sources":["/home/koala/itis-course-2020-2021-fe-master/src/components/pages/TasksWithGraphql/TasksWithGraphql.js"],"names":["useState","useEffect","styled","ToDoList","ToDoForm","Button","useTask","defaultChangeValue","defaultList","text","id","ToDoPage","tasks","loading","list","setList","hasChanged","changed","onAddNewListItem","value","JSON","stringify","resetList","onSaveList","onRemove","i","filter","elem","index"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,kBAAkB,GAAG,KAA3B;AAEA,IAAIC,WAAW,GAAG,CACd;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CADc,EAEd;AAACD,EAAAA,IAAI,EAAE,WAAP;AAAoBC,EAAAA,EAAE,EAAE;AAAxB,CAFc,CAAlB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAmBP,OAAO,EAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACQ,WAAD,CAAhC;AACA,QAAM,CAACQ,UAAD,EAAaC,OAAb,IAAwBjB,QAAQ,CAACO,kBAAD,CAAtC;;AACA,QAAMW,gBAAgB,GAAIC,KAAD,IAAW;AAChCJ,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACL,MAAAA,IAAI,EAAEU;AAAP,KAAV,CAAD,CAAP;AACH,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImB,IAAI,CAACC,SAAL,CAAeP,IAAf,MAAyBM,IAAI,CAACC,SAAL,CAAeb,WAAf,CAA7B,EAA0D;AACtDS,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD,MAEO;AACHA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GANQ,CAAT;;AAQA,QAAMK,SAAS,GAAG,MAAM;AACpBP,IAAAA,OAAO,CAACP,WAAD,CAAP;AACH,GAFD;;AAIA,QAAMe,UAAU,GAAG,MAAM;AACrBf,IAAAA,WAAW,GAAGM,IAAd;AACAG,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACpBV,IAAAA,OAAO,CAACD,IAAI,CAACY,MAAL,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiBH,CAAC,KAAKG,KAAnC,CAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEd,IAAhB;AAAsB,MAAA,QAAQ,EAAEU,QAAhC;AAA0C,MAAA,UAAU,EAAER;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAtCD;;GAAMZ,Q;UACuBL,O;;;KADvBK,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport ToDoList from '../../molecules/ToDoList';\nimport ToDoForm from '../../molecules/ToDoForm';\nimport Button from \"../../atoms/Button\";\nimport useTask from \"../../../hooks/useTask\";\n\nconst defaultChangeValue = false;\n\nlet defaultList = [\n    {text: 'do h/w', id: 1},\n    {text: 'sleeeeeep', id: 2}\n]\n\n/*const Wrapper = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n`;*/\n\nconst ToDoPage = () => {\n    const {tasks, loading} = useTask();\n    const [list, setList] = useState(defaultList);\n    const [hasChanged, changed] = useState(defaultChangeValue);\n    const onAddNewListItem = (value) => {\n        setList([...list, {text: value}]);\n    };\n\n    useEffect(() => {\n        if (JSON.stringify(list) === JSON.stringify(defaultList)) {\n            changed(false);\n        } else {\n            changed(true);\n        }\n    });\n\n    const resetList = () => {\n        setList(defaultList);\n    }\n\n    const onSaveList = () => {\n        defaultList = list;\n        changed(false);\n    }\n\n    const onRemove = (i) => {\n        setList(list.filter((elem, index) => i !== index));\n    }\n\n    return (\n        <>\n            <Title></Title>\n            <ToDoList list={list} onRemove={onRemove} hasChanged={hasChanged}/>\n            <ToDoForm onSubmit={onAddNewListItem}/>\n            <Button onClick={resetList}>Reset</Button>\n            <Button onClick={onSaveList}>Save</Button>\n        </>\n    );\n};\n\nexport default ToDoPage;\n"]},"metadata":{},"sourceType":"module"}